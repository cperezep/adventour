.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    // The inherit from the body tag is not working in the case of input's placeholder.
    // We need forcibly specify that is should be inherited here.
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    display: block;
    width: 90%;
    transition: all 0.3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;

      // Just when the input is focused
      &:invalid {
        border-bottom: 3px solid $color-secondary-dark;
      }
    }

    &::-webkit-input-placeholder {
      // Change color input placeholder
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
  }

  // Only shown as soon as we have some text on input
  // When the placeholder is shown on the input element, the label to be hidden
  // + adjacent sibling selector -> select the sibling element that comes inmediatly AFTER the element (the label needs after the input
  // ~ general sibling selector
  &__input:placeholder-shown + &__label {
    // Why dont we just use the  visibility: hidden without opacity?
    // Because we cannot animate the visibility
    opacity: 0; // The element will basically still be on the page
    visibility: hidden; // The element really gone
    transform: translateY(-4rem);
  }

  &__radio {
    &-group {
      width: 49%;
      display: inline-block;
    }

    &-input {
      display: none;
    }

    &-label {
      font-size: $default-font-size;
      cursor: pointer;
      position: relative;
      padding-left: 4.5rem;
    }

    &-button {
      height: 3rem;
      width: 3rem;
      border: 5px solid $color-primary;
      border-radius: 50%;
      display: inline-block;
      position: absolute;
      left: 0;
      top: -0.4rem;

      &::after {
        content: "";
        display: block;
        height: 1.3rem;
        width: 1.3rem;
        border-radius: 50%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: $color-primary;
        opacity: 0;
        transition: opacity 0.2s;
      }
    }

    &-input:checked + &-label &-button::after {
      opacity: 1;
    }
  }
}
